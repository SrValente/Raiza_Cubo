import streamlit as st
import pandas as pd
import requests
from requests.auth import HTTPBasicAuth
from datetime import datetime
from xml.sax.saxutils import escape
import xml.etree.ElementTree as ET
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart

st.set_page_config(page_title="Consulta de Ocorr√™ncias - TOTVS", layout="wide")

# Configura√ß√µes do Gmail
GMAIL_USER = "bi@raizeducacao.com.br"
GMAIL_PASSWORD = "jqby exvy ripr ptwd"

def enviar_email(destinatarios, assunto, corpo):
    try:
        msg = MIMEMultipart()
        msg['From'] = GMAIL_USER
        msg['To'] = ", ".join(destinatarios)
        msg['Subject'] = assunto
        msg.attach(MIMEText(corpo, 'plain'))
        
        with smtplib.SMTP_SSL('smtp.gmail.com', 465) as smtp:
            smtp.login(GMAIL_USER, GMAIL_PASSWORD)
            smtp.send_message(msg)
        return True
    except Exception as e:
        st.error(f"‚ùå Falha no envio do e-mail: {e}")
        return False

USERNAME = "p_heflo"
PASSWORD = "Q0)G$sW]rj"
SOAP_URL = "https://raizeducacao160286.rm.cloudtotvs.com.br:8051/wsDataServer/IwsDataServer"
BASE_URL = "https://raizeducacao160286.rm.cloudtotvs.com.br:8051/api/framework/v1/consultaSQLServer/RealizaConsulta"

st.title("üîç Consulta de Ocorr√™ncias - TOTVS")

# Listagem de filiais
filiais = [
    {"NOMEFANTASIA": "COL√âGIO E CURSO AO CUBO BARRA", "CODCOLIGADA": 5, "CODFILIAL": 2},
    {"NOMEFANTASIA": "COL√âGIO E CURSO AO CUBO BOTAFOGO", "CODCOLIGADA": 5, "CODFILIAL": 5},
]

filiais_opcoes = {f"{f['NOMEFANTASIA']} ({f['CODFILIAL']})": (f['CODCOLIGADA'], f['CODFILIAL']) for f in filiais}
filial_escolhida = st.selectbox("Selecione a Filial:", list(filiais_opcoes.keys()))
codcoligada, codfilial = filiais_opcoes.get(filial_escolhida, (None, None))

def consultar_api(codigo, codcoligada=None, codfilial=None, ra=None, codperlet=None, ra_nome=None):
    if codigo == "RAIZA.0008":
        parametros = f"CODCOLIGADA={codcoligada};CODFILIAL={codfilial};CODPERLET={codperlet}"
    elif codigo == "RAIZA.0001":
        parametros = f"CODCOLIGADA={codcoligada};CODFILIAL={codfilial};RA={ra}"
    elif codigo == "RAIZA.0002":
        ra_nome = "%" if not ra_nome else ra_nome
        parametros = f"CODCOLIGADA={codcoligada};CODFILIAL={codfilial};RA_NOME={ra_nome}"
    elif codigo == "RAIZA.0017":
        parametros = f"CODCOLIGADA={codcoligada};CODFILIAL={codfilial};RA={ra}"
    else:
        parametros = ""

    url = f"{BASE_URL}/{codigo}/0/S"
    try:
        response = requests.get(
            url,
            auth=HTTPBasicAuth(USERNAME, PASSWORD),
            params={"parameters": parametros},
            verify=False
        )
        return response.json() if response.status_code == 200 else None
    except Exception as e:
        st.error(f"‚ùå Erro na requisi√ß√£o: {e}")
        return None

# Buscar IDPERLET
id_perlet = None
if codcoligada and codfilial:
    perlet_info = consultar_api("RAIZA.0008", codcoligada=codcoligada, codfilial=codfilial, codperlet=2025)
    id_perlet = perlet_info[0].get("IDPERLET") if perlet_info else None

# Selecionar Aluno
ra_aluno = None
if codcoligada and codfilial:
    alunos = consultar_api("RAIZA.0002", codcoligada=codcoligada, codfilial=codfilial, ra_nome="%")
    if alunos:
        alunos_opcoes = {a["RA_NOME"]: a["RA"] for a in alunos if "RA" in a and "RA_NOME" in a}
        if alunos_opcoes:
            aluno_selecionado = st.selectbox("Selecione o Aluno (RA - Nome):", list(alunos_opcoes.keys()))
            ra_aluno = alunos_opcoes[aluno_selecionado]

# Consulta de Ocorr√™ncias
if ra_aluno and codcoligada and codfilial:
    if st.button("üîé Consultar Ocorr√™ncias"):
        ocorrencias = consultar_api("RAIZA.0001", codcoligada=codcoligada, codfilial=codfilial, ra=ra_aluno)
        if ocorrencias:
            st.success("‚úÖ Consulta realizada com sucesso!")
            st.dataframe(pd.DataFrame(ocorrencias))
        else:
            st.warning("‚ö† Nenhuma ocorr√™ncia encontrada.")

    if st.button("‚ûï Nova Ocorr√™ncia"):
        st.session_state["nova_ocorrencia"] = True

    if "nova_ocorrencia" in st.session_state:
        st.markdown("### üìù Registrar Nova Ocorr√™ncia")
        descricao_tipo = st.selectbox("Selecione o Tipo de Ocorr√™ncia:", ["Advert√™ncia", "Suspens√£o", "Outros"])
        observacoes_input = st.text_area("Observa√ß√µes*", placeholder="Descreva os detalhes da ocorr√™ncia...")
        observacoes_internas_input = st.text_area("Observa√ß√µes Internas", placeholder="Registro para uso exclusivo da equipe pedag√≥gica")
        enviar_email_check = st.checkbox("‚úâÔ∏è Enviar notifica√ß√£o por e-mail aos respons√°veis")
        cod_ocorrencia_tipo = 30

        if st.button("‚úÖ Concluir Inclus√£o da Ocorr√™ncia") and id_perlet:
            xml_data = f"""<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tot="http://www.totvs.com/">
   <soapenv:Header/>
   <soapenv:Body>
      <tot:SaveRecord>
         <tot:DataServerName>EduOcorrenciaAlunoData</tot:DataServerName>
         <tot:XML><![CDATA[<EduOcorrenciaAluno>
   <SOcorrenciaAluno>
         <CODCOLIGADA>{codcoligada}</CODCOLIGADA>
         <IDOCORALUNO>-1</IDOCORALUNO>
         <RA>{ra_aluno}</RA>
         <CODOCORRENCIAGRUPO>4</CODOCORRENCIAGRUPO>
         <CODOCORRENCIATIPO>{cod_ocorrencia_tipo}</CODOCORRENCIATIPO>
         <IDPERLET>{id_perlet}</IDPERLET>
         <CODPERLET>2025</CODPERLET>
         <DATAOCORRENCIA>{datetime.now().astimezone().strftime("%Y-%m-%dT%H:%M:%S%z")}</DATAOCORRENCIA>
         <DESCGRUPOOCOR>Grupo Comportamental</DESCGRUPOOCOR>
         <DESCTIPOOCOR>{descricao_tipo}</DESCTIPOOCOR>
         <CODTIPOCURSO>1</CODTIPOCURSO>
         <DISPONIVELWEB>0</DISPONIVELWEB>
         <RESPONSAVELCIENTE>0</RESPONSAVELCIENTE>
         <OBSERVACOES>{escape(observacoes_input)}</OBSERVACOES>
         <OBSERVACOESINTERNAS>{escape(observacoes_internas_input)}</OBSERVACOESINTERNAS>
         <POSSUIARQUIVO>N</POSSUIARQUIVO>
   </SOcorrenciaAluno>
</EduOcorrenciaAluno>]]></tot:XML>
         <tot:Contexto>CODCOLIGADA={codcoligada}</tot:Contexto>
      </tot:SaveRecord>
   </soapenv:Body>
</soapenv:Envelope>"""

            response = requests.post(
                SOAP_URL,
                data=xml_data.encode('utf-8'),
                headers={"Content-Type": "text/xml; charset=utf-8", "SOAPAction": "http://www.totvs.com/IwsDataServer/SaveRecord"},
                auth=HTTPBasicAuth(USERNAME, PASSWORD),
                verify=False
            )

            if response.status_code == 200:
                st.success("‚úÖ Ocorr√™ncia registrada com sucesso!")
                del st.session_state["nova_ocorrencia"]

                if enviar_email_check:
                    emails_responsaveis = consultar_api("RAIZA.0017", codcoligada=codcoligada, codfilial=codfilial, ra=ra_aluno)
                    if emails_responsaveis:
                        destinatarios = set()
                        for linha in emails_responsaveis:
                            for campo in ["EMAIL_RESP_FIN", "EMAIL_RESP_ACAD", "EMAIL_PAI_1", "EMAIL_PAI_2", "EMAIL_MAE_1", "EMAIL_MAE_2"]:
                                if linha.get(campo):
                                    destinatarios.add(linha[campo].strip())
                        
                        if destinatarios:
                            corpo_email = f"""
                            COMUNICADO OFICIAL - RA√çZ EDUCA√á√ÉO

                            Prezado Respons√°vel,

                            Comunicamos que foi registrada uma ocorr√™ncia referente ao(a) aluno(a): 
                            {aluno_selecionado}

                            Detalhes:
                            - Tipo de Ocorr√™ncia: {descricao_tipo}
                            - Data do Registro: {datetime.now().strftime('%d/%m/%Y %H:%M')}
                            - Observa√ß√µes: 
                            {observacoes_input}

                            Este registro tem como objetivo manter a transpar√™ncia e o acompanhamento 
                            do desenvolvimento do aluno em nosso ambiente educacional.

                            Atenciosamente,
                            Coordena√ß√£o Pedag√≥gica
                            RA√çZ EDUCA√á√ÉO
                            """
                            
                            if enviar_email(destinatarios, "Registro de Ocorr√™ncia - RA√çZ EDUCA√á√ÉO", corpo_email):
                                st.success(f"üìß Notifica√ß√£o enviada para: {', '.join(destinatarios)}")
            else:
                st.error(f"‚ùå Erro ao registrar ocorr√™ncia: {response.text}")
